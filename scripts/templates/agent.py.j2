from pocketflow import Node
from utils import call_llm

class {{ agent.id|classname }}Node(Node):
    """{{ agent.description or 'Generated agent from BMAD' }}"""
    
    def prep(self, shared):
        """Prepare input data for the agent."""
        return shared.get("input", "")
    
    def exec(self, prep_res):
        """Execute the agent with LLM call."""
        prompt = """{{ agent.prompt_content }}"""
        
        if prep_res:
            prompt = prompt + "\n\nInput: " + str(prep_res)
        
        return call_llm(prompt)
    
    def post(self, shared, prep_res, exec_res):
        """Store result and return action for flow control."""
        shared["{{ agent.id }}_result"] = exec_res
        shared["last_result"] = exec_res
        return "default"